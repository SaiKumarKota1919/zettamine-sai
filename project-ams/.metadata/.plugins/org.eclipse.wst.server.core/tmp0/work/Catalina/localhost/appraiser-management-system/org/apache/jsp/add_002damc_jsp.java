/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.17
 * Generated at: 2023-12-31 11:28:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.zm.ams.dto.States;
import java.util.List;

public final class add_002damc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5-migrated-0.0.1.jar", Long.valueOf(1701972098000L));
    _jspx_dependants.put("jar:file:/D:/sai-kumar/project-ams/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/appraiser-management-system/WEB-INF/lib/taglibs-standard-impl-1.2.5-migrated-0.0.1.jar!/META-INF/c.tld", Long.valueOf(1578911364000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.zm.ams.dto.States");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <title>Add AMC</title>\r\n");
      out.write(" <link rel=\"stylesheet\" href=\"css/form.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <form id=\"add-amc-form\" action=\"addAmc\">\r\n");
      out.write("<a href=\"/appraiser-management-system/logout\" class=\"logout-link\">Logout</a> \r\n");
      out.write("<a href=\"/appraiser-management-system/home.jsp\" class=\"home-link\">Home</a>\r\n");
      out.write("\r\n");
      out.write("    <h2>Add AMC Details</h2>\r\n");
      out.write("     <label for=\"register-id\">Register ID:</label>\r\n");
      out.write("    <input type=\"text\" id=\"register-id\" name=\"registerId\" required placeholder=\"Enter Register ID\">\r\n");
      out.write("\r\n");
      out.write("    <label for=\"name\">Name:</label>\r\n");
      out.write("    <input type=\"text\" id=\"name\" name=\"name\" required placeholder=\"Enter Name\">\r\n");
      out.write("\r\n");
      out.write("    <label for=\"remarks\">Remarks:</label>\r\n");
      out.write("    <textarea id=\"remarks\" name=\"remarks\" rows=\"4\" placeholder=\"Enter Remarks\"></textarea>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"website\">Website:</label>\r\n");
      out.write("    <input type=\"text\" id=\"website\" name=\"website\" placeholder=\"Enter Website\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"address-line-1\">Address Line 1:</label>\r\n");
      out.write("    <input type=\"text\" id=\"address-line-1\" name=\"addressLine1\" placeholder=\"Enter Address Line 1\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"address-line-2\">Address Line 2:</label>\r\n");
      out.write("    <input type=\"text\" id=\"address-line-2\" name=\"addressLine2\" placeholder=\"Enter Address Line 2\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <label for=\"state\">State:</label>\r\n");
      out.write("    <select id=\"state\" name=\"state\" required>\r\n");
      out.write("      <option value=\"\" selected disabled>Select a state</option>\r\n");
      out.write("      ");
for(States state: States.values())
    	 {
    	  
      out.write("\r\n");
      out.write("    	  <option value=\"");
      out.print( state.name());
      out.write('"');
      out.write('>');
      out.print(state.getStateName());
      out.write("</option>\r\n");
      out.write("      ");
 }
      
      out.write("\r\n");
      out.write("     \r\n");
      out.write("    </select>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"city\">City:</label>\r\n");
      out.write("    <input type=\"text\" id=\"city\" name=\"city\" placeholder=\"Enter City\" required>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"zip-code\">Zip Code:</label>\r\n");
      out.write(" <!--   <input type=\"number\" id=\"zip-code\" name=\"zipCode\" placeholder=\"Enter Zip Code\" maxlength=\"6\" min=\"6\"  max=\"6\" required> -->\r\n");
      out.write(" <input type=\"text\" name=\"zipCode\" placeholder=\"Enter Zip Code (6 digits)\" id=\"myKadA\" pattern=\"[0-9]{6}\" maxlength=\"6\" title=\"Please enter a 6-digit zip code\" required>\r\n");
      out.write(" \r\n");
      out.write("    <label for=\"active\">Active:</label>\r\n");
      out.write("    <input type=\"radio\" id=\"active\" name=\"active\" value=\"true\" required>\r\n");
      out.write("	Yes\r\n");
      out.write("	<input type=\"radio\" id=\"active\" name=\"active\" value=\"flase\" required>\r\n");
      out.write("	No<br><br>\r\n");
      out.write("	");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    <button type=\"submit\">Add AMC</button>\r\n");
      out.write(" <button type=\"button\" class=\"cancel-button\" onclick=\"window.location.href='home.jsp'\">Cancel</button>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  </form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /add-amc.jsp(62,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${errorMessage!=null}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	<span style=color:red>Already exists try with another!!!</span><br><br>\r\n");
          out.write("	");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
